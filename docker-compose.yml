version: "3"

services:
  consul:
    image: consul

  db1:
    image: mysql/mysql-server:8.0
    container_name: db1
    hostname: db1
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: 65hh0x21GJmlqM
      MYSQL_USER: social-network-user
      MYSQL_PASSWORD: sQ7mDXwwLcfq
      MYSQL_DATABASE: social-network
    command: ["mysqld",
              "--server-id=1",
              "--gtid-mode=ON",
              "--enforce-gtid-consistency=ON",
              "--plugin-load-add=group_replication.so",
              "--relay-log-recovery=ON",
              "--loose-group-replication-start-on-boot=OFF",
              "--loose-group-replication-group-name=aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee",
              "--loose-group-replication-local-address=db1:33061",
              "--loose-group-replication-group-seeds=db1:33061,db2:33061,db3:33061",
              "--loose-group_replication_bootstrap_group=OFF"]
    healthcheck:
      test: "mysqladmin ping -u root -p$${MYSQL_ROOT_PASSWORD}"
      interval: 2s
      retries: 20

  db2:
    image: mysql/mysql-server:8.0
    container_name: db2
    hostname: db2
    restart: unless-stopped
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: 65hh0x21GJmlqM
      MYSQL_USER: social-network-user
      MYSQL_PASSWORD: sQ7mDXwwLcfq
      MYSQL_DATABASE: social-network
    command: ["mysqld",
              "--server-id=2",
              "--gtid-mode=ON",
              "--enforce-gtid-consistency=ON",
              "--plugin-load-add=group_replication.so",
              "--relay-log-recovery=ON",
              "--loose-group-replication-start-on-boot=OFF",
              "--loose-group-replication-group-name=aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee",
              "--loose-group-replication-local-address=db2:33061",
              "--loose-group-replication-group-seeds=db1:33061,db2:33061,db3:33061",
              "--loose-group_replication_bootstrap_group=OFF"]
    healthcheck:
      test: "mysqladmin ping -u root -p$${MYSQL_ROOT_PASSWORD}"
      interval: 2s
      retries: 20

  db3:
    image: mysql/mysql-server:8.0
    container_name: db3
    hostname: db3
    restart: unless-stopped
    ports:
      - "3308:3306"
    environment:
      MYSQL_ROOT_PASSWORD: 65hh0x21GJmlqM
      MYSQL_USER: social-network-user
      MYSQL_PASSWORD: sQ7mDXwwLcfq
      MYSQL_DATABASE: social-network
    command: ["mysqld",
              "--server-id=3",
              "--gtid-mode=ON",
              "--enforce-gtid-consistency=ON",
              "--plugin-load-add=group_replication.so",
              "--relay-log-recovery=ON",
              "--loose-group-replication-start-on-boot=OFF",
              "--loose-group-replication-group-name=aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee",
              "--loose-group-replication-local-address=db3:33061",
              "--loose-group-replication-group-seeds=db1:33061,db2:33061,db3:33061",
              "--loose-group_replication_bootstrap_group=OFF"]
    healthcheck:
      test: "mysqladmin ping -u root -p$${MYSQL_ROOT_PASSWORD}"
      interval: 2s
      retries: 20

  dialogue1:
    image: postgres
    container_name: dialogue1
    hostname: dialogue1
    restart: unless-stopped
    environment:
      POSTGRES_USER: dialogue-user
      POSTGRES_PASSWORD: pG7mDXwwLcfq
      POSTGRES_DB: dialogue
    depends_on:
      - counter
      - mq
      - consul

  dialogue2:
    image: postgres
    container_name: dialogue2
    hostname: dialogue2
    restart: unless-stopped
    environment:
      POSTGRES_USER: dialogue-user
      POSTGRES_PASSWORD: pG7mDXwwLcfq
      POSTGRES_DB: dialogue
    depends_on:
      - counter
      - mq
      - consul

  mq:
    image: rabbitmq
    container_name: mq
    hostname: mq
    restart: unless-stopped

  redis:
    image: redis
    container_name: redis
    hostname: redis
    restart: unless-stopped

  counter:
    build: ./counter-service
    ports:
      - "7003:80"
    restart: unless-stopped
    environment:
      - CONSUL_HTTP_ADDR=consul:8500
      - CONSUL_SERVICE_ID=dialogues2
    depends_on:
      - mq
      - consul
      - redis

  dialogues:
    build: ./dialogue-service
    restart: unless-stopped
    environment:
      - CONSUL_HTTP_ADDR=consul:8500
      - CONSUL_SERVICE_ID=dialogues
      - INIT_DB=true
    depends_on:
      - dialogue1
      - dialogue2
      - consul

  dialogues2:
    build: ./dialogue-service
    restart: unless-stopped
    environment:
      - CONSUL_HTTP_ADDR=consul:8500
      - CONSUL_SERVICE_ID=dialogues2
    depends_on:
      - dialogue1
      - dialogue2
      - consul

  service1:
    build: ./main
    restart: unless-stopped
    ports:
      - "8081:80"
    environment:
      - CONSUL_HTTP_ADDR=consul:8500
    depends_on:
      - db1
      - db2
      - db3
      - dialogues
      - dialogues2
      - mq
      - consul
      - counter

  service2:
    build: ./main
    restart: unless-stopped
    environment:
      - CONSUL_HTTP_ADDR=consul:8500
    depends_on:
      - db1
      - db2
      - db3
      - dialogues
      - dialogues2
      - mq
      - consul
      - counter

  service3:
    build: ./main
    restart: unless-stopped
    environment:
      - CONSUL_HTTP_ADDR=consul:8500
    depends_on:
      - db1
      - db2
      - db3
      - dialogues
      - dialogues2
      - mq
      - consul
      - counter

  nginx:
    image: nginx:1.21
    container_name: nginx-lb
    restart: on-failure
    volumes:
      - "./nginx/default.conf:/etc/nginx/conf.d/default.conf"
    ports:
      - "80:80"
      - "8080:8080"

  haproxy:
    image: haproxy:2.4
    restart: on-failure
    volumes:
      - "./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg"

  prometheus:
    image: prom/prometheus:v2.30.3
    volumes:
      - ./prometheus:/etc/prometheus
      - ./prometheus/data:/prometheus
    command: --web.enable-lifecycle --config.file=/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:6.7.2
    container_name: grafana
    volumes:
      - ./grafana/data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/grafana.ini:/etc/grafana/conf/grafana.ini
    restart: unless-stopped
    ports:
      - "3000:3000"
    command: --config=/etc/grafana/conf/grafana.ini
